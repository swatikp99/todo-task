{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","text","color","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAEMA,EAAS,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAC3B,OAAO,wBAAQA,QAASA,EAASC,MAAO,CAAEC,gBAAiBH,GAASI,UAAU,MAAvE,SAA8EL,KAG1ED,IAEfA,EAAOO,aAAe,CAClBL,MAAO,QCRX,IAAMM,EAAS,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAE9B,OACE,yBAAQL,UAAU,SAAlB,UACE,6BAAKG,IACL,cAAC,EAAD,CAAQN,QAASO,EAAOR,MAAOS,EAAQ,MAAM,OAAQV,KAAMU,EAAU,QAAQ,YAKnFH,EAAOD,aAAe,CACpBE,MAAO,gBAGMD,Q,OCIAI,EAlBF,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC9B,OACE,sBACET,UAAS,eAAUO,EAAKG,SAAW,WAAa,IAChDC,cAAe,kBAAMF,EAASF,EAAKK,KAFrC,UAIE,+BACGL,EAAKZ,KACN,cAAC,IAAD,CACEG,MAAO,CAAEF,MAAO,OAChBC,QAAS,kBAAMW,EAASD,EAAKK,UAGjC,4BAAIL,EAAKM,UCGAC,EAfD,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,MAAOP,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAChC,OACE,mCACGM,EAAMC,KAAI,SAACT,GAAD,OACT,cAAC,EAAD,CAEEA,KAAMA,EACNC,SAAUA,EACVC,SAAUA,GAHLF,EAAKK,UCiDLK,EAtDC,SAAC,GAAe,IAAbb,EAAY,EAAZA,MAAY,EACLc,mBAAS,IADJ,mBACtBvB,EADsB,KAChBwB,EADgB,OAEPD,mBAAS,IAFF,mBAEtBL,EAFsB,KAEjBO,EAFiB,OAGGF,oBAAS,GAHZ,mBAGtBR,EAHsB,KAGZW,EAHY,KAmB7B,OACE,uBAAMrB,UAAU,WAAWsB,SAfZ,SAACC,GAChBA,EAAEC,iBAEG7B,GAKLS,EAAM,CAAET,OAAMkB,MAAKH,aAEnBS,EAAQ,IACRC,EAAO,IACPC,GAAY,IARVI,MAAM,oBAWR,UACE,sBAAKzB,UAAU,eAAf,UACE,8CACA,uBACE0B,KAAK,OACLC,YAAY,aACZC,MAAOjC,EACPkC,SAAU,SAACN,GAAD,OAAOJ,EAAQI,EAAEO,OAAOF,aAGtC,sBAAK5B,UAAU,eAAf,UACE,kDACA,uBACE0B,KAAK,OACLC,YAAY,sBACZC,MAAOf,EACPgB,SAAU,SAACN,GAAD,OAAOH,EAAOG,EAAEO,OAAOF,aAGrC,sBAAK5B,UAAU,kCAAf,UACE,mDACA,uBACE0B,KAAK,WACLK,QAASrB,EACTkB,MAAOlB,EACPmB,SAAU,SAACN,GAAD,OAAOF,EAAYE,EAAES,cAAcD,eAIjD,uBAAOL,KAAK,SAASE,MAAM,OAAO5B,UAAU,sBCcnCiC,MA5Df,WAAgB,IAAD,EACyBf,oBAAS,GADlC,mBACNgB,EADM,KACOC,EADP,OAEajB,mBAAS,CACjC,CACEN,GAAI,EACJjB,KAAM,sBACNkB,IAAK,oBACLH,UAAU,GAEZ,CACEE,GAAI,EACJjB,KAAM,WACNkB,IAAK,oBACLH,UAAU,GAEZ,CACEE,GAAI,EACJjB,KAAM,cACNkB,IAAK,oBACLH,UAAU,KAnBD,mBAENK,EAFM,KAECqB,EAFD,KA4Cb,OACE,sBAAKpC,UAAU,YAAf,UACE,cAAC,EAAD,CACEI,MAAO,kBAAM+B,GAAgBD,IAC7B7B,QAAS6B,IAEVA,GAAe,cAAC,EAAD,CAAS9B,MA1Bb,SAACG,GACf,IAAMK,EAAKyB,KAAKC,MAAsB,IAAhBD,KAAKE,UAAoB,EACzCC,EAAO,aAAK5B,MAAOL,GACzB6B,EAAS,GAAD,mBAAKrB,GAAL,CAAYyB,QAwBjBzB,EAAM0B,OAAS,EACd,cAAC,EAAD,CAAO1B,MAAOA,EAAOP,SArBR,SAACI,GAClBwB,EAASrB,EAAM2B,QAAO,SAACnC,GAAD,OAAUA,EAAKK,KAAOA,MAC5C+B,QAAQC,IAAI,UAAWhC,IAmBwBH,SAhB1B,SAACG,GACtBwB,EACErB,EAAMC,KAAI,SAACT,GAAD,OACRA,EAAKK,KAAOA,EAAZ,2BAAsBL,GAAtB,IAA4BG,UAAWH,EAAKG,WAAaH,SAezD,oBC/COsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.08fe3e92.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({ text ,color, onClick }) => {\r\n    return <button onClick={onClick} style={{ backgroundColor: color }} className=\"btn\">{text}</button>\r\n}\r\n\r\nexport default Button\r\n\r\nButton.defaultProps = {\r\n    color: 'blue',\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func.isRequired,\r\n}","import Button from \"./Button\";\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n  \r\n  return (\r\n    <header className=\"header\">\r\n      <h1>{title}</h1>\r\n      <Button onClick={onAdd} color={showAdd?\"red\":\"blue\"} text={showAdd ? \"CLOSE\":\"ADD\"} />\r\n    </header>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  title: \"Task Tracker\",\r\n};\r\n\r\nexport default Header;\r\n","import { FaTrashAlt } from \"react-icons/fa\";\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n  return (\r\n    <div\r\n      className={`task ${task.reminder ? \"reminder\" : \"\"}`}\r\n      onDoubleClick={() => onToggle(task.id)}\r\n    >\r\n      <h3>\r\n        {task.text}\r\n        <FaTrashAlt\r\n          style={{ color: \"red\" }}\r\n          onClick={() => onDelete(task.id)}\r\n        />\r\n      </h3>\r\n      <p>{task.day}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import Task from \"./Task\";\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n  return (\r\n    <>\r\n      {tasks.map((task) => (\r\n        <Task\r\n          key={task.id}\r\n          task={task}\r\n          onDelete={onDelete}\r\n          onToggle={onToggle}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import { useState } from \"react\";\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n  const [text, setText] = useState(\"\");\r\n  const [day, setDay] = useState(\"\");\r\n  const [reminder, setReminder] = useState(false);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!text) {\r\n      alert(\"Please add Task\");\r\n      return;\r\n    }\r\n\r\n    onAdd({ text, day, reminder });\r\n\r\n    setText(\"\");\r\n    setDay(\"\");\r\n    setReminder(false);\r\n  };\r\n  return (\r\n    <form className=\"add-form\" onSubmit={onSubmit}>\r\n      <div className=\"form-control\">\r\n        <label>Task Name</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter Task\"\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-control\">\r\n        <label>Date and Time</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter Date and Time\"\r\n          value={day}\r\n          onChange={(e) => setDay(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-control form-control-check\">\r\n        <label>Task Completed</label>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={reminder}\r\n          value={reminder}\r\n          onChange={(e) => setReminder(e.currentTarget.checked)}\r\n        />\r\n      </div>\r\n\r\n      <input type=\"submit\" value=\"Save\" className=\"btn btn-block\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","import Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport { useState } from \"react\";\nimport AddTask from \"./components/AddTask\";\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      text: \"Doctors appointment\",\n      day: \"Feb 5th at 2:30pm\",\n      reminder: true,\n    },\n    {\n      id: 2,\n      text: \"Do Lunch\",\n      day: \"Feb 5th at 3:30pm\",\n      reminder: true,\n    },\n    {\n      id: 3,\n      text: \"Goto Movies\",\n      day: \"Feb 6th at 7:30pm\",\n      reminder: false,\n    },\n  ]);\n\n  //Add Task\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = { id, ...task };\n    setTasks([...tasks, newTask]);\n  };\n\n  // Delete Task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id));\n    console.log(\"working\", id);\n  };\n\n  const toggleReminder = (id) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: !task.reminder } : task\n      )\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <Header\n        onAdd={() => setShowAddTask(!showAddTask)}\n        showAdd={showAddTask}\n      />\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n      ) : (\n        \"No Tasks left\"\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}